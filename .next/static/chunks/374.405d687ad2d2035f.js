"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[374],{94374:function(t,e,r){r.r(e),r.d(e,{TokenDrop:function(){return s}});var a=r(18515),i=r(9279);r(54098),r(18991),r(46878),r(20583),r(84194),r(51121),r(32484),r(78435),r(26219),r(61303),r(49242),r(70565),r(13670),r(79120),r(97604),r(8187),r(19362),r(70332),r(54730),r(36250),r(85725),r(38730),r(237),r(65609),r(77208),r(86841),r(49561),r(8455),r(40553),r(26),r(69392),r(25025),r(34161),r(50266),r(98839),r(62555),r(82037),r(64063),r(65815),r(59189),r(40721),r(51375),r(43320);class s extends a.X{constructor(t,e,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0;super(arguments.length>5&&void 0!==arguments[5]?arguments[5]:new a.C(t,e,n,i),r),(0,a._)(this,"abi",void 0),(0,a._)(this,"metadata",void 0),(0,a._)(this,"roles",void 0),(0,a._)(this,"encoder",void 0),(0,a._)(this,"estimator",void 0),(0,a._)(this,"sales",void 0),(0,a._)(this,"platformFees",void 0),(0,a._)(this,"events",void 0),(0,a._)(this,"claimConditions",void 0),(0,a._)(this,"interceptor",void 0),this.abi=n,this.metadata=new a.a(this.contractWrapper,a.Y,this.storage),this.roles=new a.b(this.contractWrapper,s.contractRoles),this.encoder=new a.h(this.contractWrapper),this.estimator=new a.G(this.contractWrapper),this.events=new a.f(this.contractWrapper),this.sales=new a.d(this.contractWrapper),this.platformFees=new a.i(this.contractWrapper),this.interceptor=new a.j(this.contractWrapper),this.claimConditions=new a.B(this.contractWrapper,this.metadata,this.storage)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.readContract.getVotes(t))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.readContract.delegates(t)}async isTransferRestricted(){return!(await this.contractWrapper.readContract.hasRole((0,a.k)("transfer"),i.d))}async claim(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return this.claimTo(await this.contractWrapper.getSignerAddress(),t,e)}async claimTo(t,e){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.erc20.claimTo(t,e,r)}async delegateTo(t){return{receipt:await this.contractWrapper.sendTransaction("delegate",[t])}}async burnTokens(t){return this.erc20.burn(t)}async burnFrom(t,e){return this.erc20.burnFrom(t,e)}async call(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),a=1;a<e;a++)r[a-1]=arguments[a];return this.contractWrapper.call(t,...r)}}(0,a._)(s,"contractRoles",["admin","transfer"])}}]);