"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[226],{88226:function(t,e,r){r.r(e),r.d(e,{EditionDrop:function(){return a}});var i=r(18515),s=r(9279);r(54098),r(18991),r(46878),r(20583),r(84194),r(51121),r(32484),r(78435),r(26219),r(61303),r(49242),r(70565),r(13670),r(79120),r(97604),r(8187),r(19362),r(70332),r(54730),r(36250),r(85725),r(38730),r(237),r(65609),r(77208),r(86841),r(49561),r(8455),r(40553),r(26),r(69392),r(25025),r(34161),r(50266),r(98839),r(62555),r(82037),r(64063),r(65815),r(59189),r(40721),r(51375),r(43320);class a extends i.S{constructor(t,e,r){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0;super(arguments.length>5&&void 0!==arguments[5]?arguments[5]:new i.C(t,e,n,s),r),(0,i._)(this,"abi",void 0),(0,i._)(this,"sales",void 0),(0,i._)(this,"platformFees",void 0),(0,i._)(this,"encoder",void 0),(0,i._)(this,"estimator",void 0),(0,i._)(this,"events",void 0),(0,i._)(this,"metadata",void 0),(0,i._)(this,"roles",void 0),(0,i._)(this,"royalties",void 0),(0,i._)(this,"claimConditions",void 0),(0,i._)(this,"checkout",void 0),(0,i._)(this,"history",void 0),(0,i._)(this,"interceptor",void 0),(0,i._)(this,"erc1155",void 0),this.abi=n,this.metadata=new i.a(this.contractWrapper,i.D,this.storage),this.roles=new i.b(this.contractWrapper,a.contractRoles),this.royalties=new i.c(this.contractWrapper,this.metadata),this.sales=new i.d(this.contractWrapper),this.claimConditions=new i.e(this.contractWrapper,this.metadata,this.storage),this.events=new i.f(this.contractWrapper),this.history=new i.g(this.events),this.encoder=new i.h(this.contractWrapper),this.estimator=new i.G(this.contractWrapper),this.platformFees=new i.i(this.contractWrapper),this.interceptor=new i.j(this.contractWrapper),this.erc1155=new i.E(this.contractWrapper,this.storage),this.checkout=new i.P(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async getAll(t){return this.erc1155.getAll(t)}async getOwned(t){return this.erc1155.getOwned(t)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!(await this.contractWrapper.readContract.hasRole((0,i.k)("transfer"),s.d))}async createBatch(t,e){return this.erc1155.lazyMint(t,e)}async getClaimTransaction(t,e,r){let i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return this.erc1155.getClaimTransaction(t,e,r,{checkERC20Allowance:i})}async claimTo(t,e,r){let i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return this.erc1155.claimTo(t,e,r,{checkERC20Allowance:i})}async claim(t,e){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const i=await this.contractWrapper.getSignerAddress();return this.claimTo(i,t,e,r)}async burnTokens(t,e){return this.erc1155.burn(t,e)}async call(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),i=1;i<e;i++)r[i-1]=arguments[i];return this.contractWrapper.call(t,...r)}}(0,i._)(a,"contractRoles",["admin","minter","transfer"])}}]);